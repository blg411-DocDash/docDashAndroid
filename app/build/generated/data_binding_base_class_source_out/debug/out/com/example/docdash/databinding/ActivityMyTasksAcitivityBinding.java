// Generated by view binder compiler. Do not edit!
package com.example.docdash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.docdash.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyTasksAcitivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView activeTasksRW;

  @NonNull
  public final Button buttonMyTasks1;

  @NonNull
  public final Button buttonTaskPool1;

  @NonNull
  public final RecyclerView completedTasksRW;

  @NonNull
  public final TextView dummyBetweenRW;

  @NonNull
  public final TextView dummyMiddleButton;

  @NonNull
  public final Button profileButton1;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshActiveTasks;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshCompletedTasks;

  @NonNull
  public final TextView textViewActiveTasks;

  @NonNull
  public final TextView textViewCompletedTasks;

  @NonNull
  public final TextView textViewPageName1;

  private ActivityMyTasksAcitivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView activeTasksRW, @NonNull Button buttonMyTasks1,
      @NonNull Button buttonTaskPool1, @NonNull RecyclerView completedTasksRW,
      @NonNull TextView dummyBetweenRW, @NonNull TextView dummyMiddleButton,
      @NonNull Button profileButton1, @NonNull SwipeRefreshLayout swipeRefreshActiveTasks,
      @NonNull SwipeRefreshLayout swipeRefreshCompletedTasks, @NonNull TextView textViewActiveTasks,
      @NonNull TextView textViewCompletedTasks, @NonNull TextView textViewPageName1) {
    this.rootView = rootView;
    this.activeTasksRW = activeTasksRW;
    this.buttonMyTasks1 = buttonMyTasks1;
    this.buttonTaskPool1 = buttonTaskPool1;
    this.completedTasksRW = completedTasksRW;
    this.dummyBetweenRW = dummyBetweenRW;
    this.dummyMiddleButton = dummyMiddleButton;
    this.profileButton1 = profileButton1;
    this.swipeRefreshActiveTasks = swipeRefreshActiveTasks;
    this.swipeRefreshCompletedTasks = swipeRefreshCompletedTasks;
    this.textViewActiveTasks = textViewActiveTasks;
    this.textViewCompletedTasks = textViewCompletedTasks;
    this.textViewPageName1 = textViewPageName1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyTasksAcitivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyTasksAcitivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_tasks_acitivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyTasksAcitivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activeTasksRW;
      RecyclerView activeTasksRW = ViewBindings.findChildViewById(rootView, id);
      if (activeTasksRW == null) {
        break missingId;
      }

      id = R.id.buttonMyTasks_1;
      Button buttonMyTasks1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonMyTasks1 == null) {
        break missingId;
      }

      id = R.id.buttonTaskPool_1;
      Button buttonTaskPool1 = ViewBindings.findChildViewById(rootView, id);
      if (buttonTaskPool1 == null) {
        break missingId;
      }

      id = R.id.completedTasksRW;
      RecyclerView completedTasksRW = ViewBindings.findChildViewById(rootView, id);
      if (completedTasksRW == null) {
        break missingId;
      }

      id = R.id.dummyBetweenRW;
      TextView dummyBetweenRW = ViewBindings.findChildViewById(rootView, id);
      if (dummyBetweenRW == null) {
        break missingId;
      }

      id = R.id.dummyMiddleButton;
      TextView dummyMiddleButton = ViewBindings.findChildViewById(rootView, id);
      if (dummyMiddleButton == null) {
        break missingId;
      }

      id = R.id.profileButton_1;
      Button profileButton1 = ViewBindings.findChildViewById(rootView, id);
      if (profileButton1 == null) {
        break missingId;
      }

      id = R.id.swipeRefreshActiveTasks;
      SwipeRefreshLayout swipeRefreshActiveTasks = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshActiveTasks == null) {
        break missingId;
      }

      id = R.id.swipeRefreshCompletedTasks;
      SwipeRefreshLayout swipeRefreshCompletedTasks = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshCompletedTasks == null) {
        break missingId;
      }

      id = R.id.textViewActiveTasks;
      TextView textViewActiveTasks = ViewBindings.findChildViewById(rootView, id);
      if (textViewActiveTasks == null) {
        break missingId;
      }

      id = R.id.textViewCompletedTasks;
      TextView textViewCompletedTasks = ViewBindings.findChildViewById(rootView, id);
      if (textViewCompletedTasks == null) {
        break missingId;
      }

      id = R.id.textViewPageName_1;
      TextView textViewPageName1 = ViewBindings.findChildViewById(rootView, id);
      if (textViewPageName1 == null) {
        break missingId;
      }

      return new ActivityMyTasksAcitivityBinding((ConstraintLayout) rootView, activeTasksRW,
          buttonMyTasks1, buttonTaskPool1, completedTasksRW, dummyBetweenRW, dummyMiddleButton,
          profileButton1, swipeRefreshActiveTasks, swipeRefreshCompletedTasks, textViewActiveTasks,
          textViewCompletedTasks, textViewPageName1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
