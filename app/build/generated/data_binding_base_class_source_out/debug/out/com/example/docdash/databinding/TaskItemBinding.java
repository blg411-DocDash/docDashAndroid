// Generated by view binder compiler. Do not edit!
package com.example.docdash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.docdash.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TaskItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView patient;

  @NonNull
  public final TextView patientRoomTitle;

  @NonNull
  public final TextView patientTitle;

  @NonNull
  public final TextView room;

  @NonNull
  public final TextView taskDescription;

  @NonNull
  public final TextView taskDue;

  @NonNull
  public final TextView taskNoTitle;

  @NonNull
  public final TextView testDescTitle;

  @NonNull
  public final TextView testDescription;

  private TaskItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView patient,
      @NonNull TextView patientRoomTitle, @NonNull TextView patientTitle, @NonNull TextView room,
      @NonNull TextView taskDescription, @NonNull TextView taskDue, @NonNull TextView taskNoTitle,
      @NonNull TextView testDescTitle, @NonNull TextView testDescription) {
    this.rootView = rootView;
    this.patient = patient;
    this.patientRoomTitle = patientRoomTitle;
    this.patientTitle = patientTitle;
    this.room = room;
    this.taskDescription = taskDescription;
    this.taskDue = taskDue;
    this.taskNoTitle = taskNoTitle;
    this.testDescTitle = testDescTitle;
    this.testDescription = testDescription;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TaskItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TaskItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.task_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TaskItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.patient;
      TextView patient = ViewBindings.findChildViewById(rootView, id);
      if (patient == null) {
        break missingId;
      }

      id = R.id.patientRoomTitle;
      TextView patientRoomTitle = ViewBindings.findChildViewById(rootView, id);
      if (patientRoomTitle == null) {
        break missingId;
      }

      id = R.id.patientTitle;
      TextView patientTitle = ViewBindings.findChildViewById(rootView, id);
      if (patientTitle == null) {
        break missingId;
      }

      id = R.id.room;
      TextView room = ViewBindings.findChildViewById(rootView, id);
      if (room == null) {
        break missingId;
      }

      id = R.id.taskDescription;
      TextView taskDescription = ViewBindings.findChildViewById(rootView, id);
      if (taskDescription == null) {
        break missingId;
      }

      id = R.id.taskDue;
      TextView taskDue = ViewBindings.findChildViewById(rootView, id);
      if (taskDue == null) {
        break missingId;
      }

      id = R.id.taskNoTitle;
      TextView taskNoTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskNoTitle == null) {
        break missingId;
      }

      id = R.id.testDescTitle;
      TextView testDescTitle = ViewBindings.findChildViewById(rootView, id);
      if (testDescTitle == null) {
        break missingId;
      }

      id = R.id.testDescription;
      TextView testDescription = ViewBindings.findChildViewById(rootView, id);
      if (testDescription == null) {
        break missingId;
      }

      return new TaskItemBinding((ConstraintLayout) rootView, patient, patientRoomTitle,
          patientTitle, room, taskDescription, taskDue, taskNoTitle, testDescTitle,
          testDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
